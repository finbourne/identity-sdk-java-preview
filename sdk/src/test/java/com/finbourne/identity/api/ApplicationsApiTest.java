/*
 * FINBOURNE Identity Service API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1598
 * Contact: info@finbourne.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.finbourne.identity.api;

import com.finbourne.identity.ApiException;
import com.finbourne.identity.model.CreateApplicationRequest;
import com.finbourne.identity.model.LusidProblemDetails;
import com.finbourne.identity.model.LusidValidationProblemDetails;
import com.finbourne.identity.model.OAuthApplication;
import com.finbourne.identity.model.ProblemDetails;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ApplicationsApi
 */
@Ignore
public class ApplicationsApiTest {

    private final ApplicationsApi api = new ApplicationsApi();

    
    /**
     * [EARLY ACCESS] CreateApplication: Create Application
     *
     * Create a new Application
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createApplicationTest() throws ApiException {
        CreateApplicationRequest createApplicationRequest = null;
        OAuthApplication response = api.createApplication(createApplicationRequest);

        // TODO: test validations
    }
    
    /**
     * [EARLY ACCESS] DeleteApplication: Delete Application
     *
     * Delete the specified application
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteApplicationTest() throws ApiException {
        String id = null;
        api.deleteApplication(id);

        // TODO: test validations
    }
    
    /**
     * [EARLY ACCESS] GetApplication: Get Application
     *
     * get the specified application, and optionally the OIDC secret
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getApplicationTest() throws ApiException {
        String id = null;
        Boolean includeSecret = null;
        OAuthApplication response = api.getApplication(id, includeSecret);

        // TODO: test validations
    }
    
    /**
     * [EARLY ACCESS] ListApplications: List Applications
     *
     * List the available applications
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listApplicationsTest() throws ApiException {
        List<OAuthApplication> response = api.listApplications();

        // TODO: test validations
    }
    
    /**
     * [EXPERIMENTAL] RotateApplicationSecrets: Rotate Application Secrets
     *
     * Rotate the secrets for the specified application
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void rotateApplicationSecretsTest() throws ApiException {
        String id = null;
        OAuthApplication response = api.rotateApplicationSecrets(id);

        // TODO: test validations
    }
    
}
